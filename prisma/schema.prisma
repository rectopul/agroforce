generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int                 @id @default(autoincrement())
  name            String?
  email           String              @unique
  cpf             String              @unique
  tel             String?
  password        String
  avatar          String?
  registration    Int?
  departmentId    Int
  departament     Department         @relation(fields: [departmentId], references: [id])
  jivochat        Int?                @default(0)
  app_login       Int?                @default(1)
  status          Int                 @default(1)
  created_at      DateTime            @default(now())
  created_by      Int
  User_Permission Users_Permissions[]
  Users_Preferences  Users_Preferences[]
}

model Profile {
  id               Int                 @id @default(autoincrement())
  name             String
  acess_permission String
  created_at       DateTime            @default(now())
  created_by       Int
  status           Int?
  User_Permission  Users_Permissions[]
}

model Users_Permissions {
  id         Int      @id @default(autoincrement())
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  profileId  Int
  profile    Profile  @relation(fields: [profileId], references: [id])
  created_at DateTime @default(now())
  created_by Int
}

model Culture {
  id         Int      @id @default(autoincrement())
  name       String?  @unique
  created_at DateTime @default(now())
  created_by Int
  status     Int      @default(1)
}

model Department {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  status     Int      @default(1)
  created_at DateTime @default(now())
  created_by Int
  User       User[]
}

model Safra {
  id         Int      @id @default(autoincrement())
  name       String?  @unique
  ano        String?  @unique
  safra_principal Int @default(0)
  created_at DateTime @default(now())
  created_by Int
  status     Int      @default(1)
}

model Modules {
  id         Int      @id @default(autoincrement())
  module     String   @unique
  Users_Preferences  Users_Preferences[]
}

model Users_Preferences {
  id         Int      @id @default(autoincrement())
  user_id    Int 
  user       User         @relation(fields: [user_id], references: [id])
  module_id  Int 
  modules     Modules         @relation(fields: [module_id], references: [id])
  table_preferences String? 
  updated_at DateTime @default(now())
}

model Config_Gerais {
  id         Int      @id @default(autoincrement())
  itens_per_page Int? 
  updated_at DateTime @default(now())
  updated_by Int
}