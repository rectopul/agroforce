generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model city {
  id   Int     @id
  ufid Int
  nome String? @db.Char(255)

  @@index([ufid], map: "ufid")
}

model config_gerais {
  id             Int      @id @default(autoincrement())
  itens_per_page Int?
  updated_at     DateTime @default(now())
  updated_by     Int
}

model culture {
  id                Int                 @id @default(autoincrement())
  name              String?             @unique(map: "Culture_name_key")
  created_at        DateTime            @default(now())
  created_by        Int
  status            Int                 @default(1)
  safra             safra[]
  users_cultures    users_cultures[]
  genotipo          genotipo[]
  users_permissions users_permissions[]
  tecnologia        tecnologia[]
  foco              foco[]
  type_assay        type_assay[]
  delineamento      delineamento[]
  epoca             epoca[]
  quadra            quadra[]
  layout_quadra     layout_quadra[]
}

model department {
  id         Int      @id @default(autoincrement())
  name       String   @unique(map: "Department_name_key")
  status     Int      @default(1)
  created_at DateTime @default(now())
  created_by Int
  user       user[]
}

model modules {
  id                Int                 @id @default(autoincrement())
  module            String              @unique(map: "Modules_module_key")
  users_preferences users_preferences[]
}

model profile {
  id                Int                 @id @default(autoincrement())
  name              String
  acess_permission  String
  created_at        DateTime            @default(now())
  created_by        Int
  status            Int?
  users_permissions users_permissions[]
}

model safra {
  id                Int       @id @default(autoincrement())
  id_culture        Int
  culture           culture   @relation(fields: [id_culture], references: [id])
  safraName         String?
  year              Int
  plantingStartTime String?
  plantingEndTime   String?
  main_safra        Int?      @default(0)
  status            Int?      @default(1)
  created_by        Int
  created_at        DateTime? @default(now())

  npe           npe[]
  type_assay    type_assay[]
  quadra        quadra[]
  foco_children foco_children[]
}

model uf {
  id    Int     @id
  nome  String? @db.Char(255)
  sigla String? @db.Char(2)
}

model user {
  id                Int                 @id @default(autoincrement())
  name              String?
  email             String              @unique(map: "User_email_key")
  cpf               String              @unique(map: "User_cpf_key")
  tel               String?
  password          String
  avatar            String?             @db.Text
  registration      Int?
  departmentId      Int
  jivochat          Int?                @default(0)
  app_login         Int?                @default(1)
  status            Int                 @default(1)
  created_at        DateTime            @default(now())
  created_by        Int
  department        department          @relation(fields: [departmentId], references: [id], map: "User_departmentId_fkey")
  users_cultures    users_cultures[]
  users_permissions users_permissions[]
  users_preferences users_preferences[]

  @@index([departmentId], map: "User_departmentId_fkey")
}

model users_cultures {
  id         Int      @id @default(autoincrement())
  userId     Int
  cultureId  Int
  created_at DateTime @default(now())
  created_by Int
  status     Int      @default(0)
  culture    culture  @relation(fields: [cultureId], references: [id], map: "Users_Cultures_cultureId_fkey")
  user       user     @relation(fields: [userId], references: [id], map: "Users_Cultures_userId_fkey")

  @@index([cultureId], map: "Users_Cultures_cultureId_fkey")
  @@index([userId], map: "Users_Cultures_userId_fkey")
}

model users_permissions {
  id         Int      @id @default(autoincrement())
  userId     Int
  profileId  Int
  cultureId  Int
  created_at DateTime @default(now())
  created_by Int
  status     Int
  profile    profile  @relation(fields: [profileId], references: [id], map: "Users_Permissions_profileId_fkey")
  user       user     @relation(fields: [userId], references: [id], map: "Users_Permissions_userId_fkey")
  culture    culture  @relation(fields: [cultureId], references: [id])

  @@index([profileId], map: "Users_Permissions_profileId_fkey")
  @@index([cultureId], map: "Users_Permissions_cultureId_fkey")
  @@index([userId], map: "Users_Permissions_userId_fkey")
}

model users_preferences {
  id                Int      @id @default(autoincrement())
  userId            Int
  module_id         Int
  table_preferences String?
  updated_at        DateTime @default(now())
  modules           modules  @relation(fields: [module_id], references: [id], map: "Users_Preferences_module_id_fkey")
  user              user     @relation(fields: [userId], references: [id], map: "Users_Preferences_userId_fkey")

  @@index([module_id], map: "Users_Preferences_module_id_fkey")
  @@index([userId], map: "Users_Preferences_userId_fkey")
}

model local {
  id            Int      @id @default(autoincrement())
  cod_local     String   @unique
  cod_red_local String?  @unique
  pais          String
  uf            String
  city          String
  name_farm     String
  latitude      String?
  longitude     String?
  altitude      String?
  created_at    DateTime @default(now())
  created_by    Int
  status        Int      @default(1)
  npe           npe[]
  quadra        quadra[]
}

model layout_quadra {
  id          Int               @id @default(autoincrement())
  id_culture  Int
  esquema     String
  plantadeira String
  tiros       Int?
  disparos    Int?
  parcelas    Int?
  status      Int               @default(1)
  created_by  Int
  created_at  DateTime          @default(now())
  Culture     culture           @relation(fields: [id_culture], references: [id])
  children    layout_children[]
}

model layout_children {
  id           Int           @id @default(autoincrement())
  id_layout    Int
  sl           Int
  sc           Int
  s_aloc       Int
  tiro         Int
  cj           String
  disparo      Int
  dist         Int
  st           String
  spc          String
  scolheita    Int
  tipo_parcela String
  status       Int           @default(1)
  created_by   Int
  created_at   DateTime      @default(now())
  Layout       layout_quadra @relation(fields: [id_layout], references: [id])
}

model quadra {
  id            Int        @id @default(autoincrement())
  cod_quadra    String
  id_culture    Int
  id_safra      Int
  local_preparo Int
  local_plantio String?
  larg_q        Int
  comp_p        Int
  linha_p       Int
  comp_c        Int
  esquema       String?
  tiro_fixo     String?
  disparo_fixo  String?
  q             String?
  status        Int        @default(1)
  created_by    Int
  created_at    DateTime   @default(now())
  localPreparo  local      @relation(fields: [local_preparo], references: [id])
  Safra         safra      @relation(fields: [id_safra], references: [id])
  Culture       culture    @relation(fields: [id_culture], references: [id])
  disparos      disparos[]
}

model disparos {
  id         Int      @id @default(autoincrement())
  id_quadra  Int
  t4_i       Int
  t4_f       Int
  di         Int
  divisor    Int
  df         Int
  sem_metros Int
  status     Int      @default(1)
  created_by Int
  created_at DateTime @default(now())
  quadra     quadra   @relation(fields: [id_quadra], references: [id])
}

model genotipo {
  id            Int        @id @default(autoincrement())
  id_culture    Int
  id_tecnologia Int
  genotipo      String
  genealogy     String?
  cruza         String
  status        Int        @default(1)
  created_by    Int
  created_at    DateTime   @default(now())
  culture       culture    @relation(fields: [id_culture], references: [id])
  tecnologia    tecnologia @relation(fields: [id_tecnologia], references: [id])
  lote          lote[]
}

model delineamento {
  id             Int       @id @default(autoincrement())
  id_culture     Int
  name           String
  repeticao      Int
  trat_repeticao Int
  status         Int       @default(1)
  created_by     Int
  created_at     DateTime? @default(now())

  culture                culture                  @relation(fields: [id_culture], references: [id])
  sequencia_delineamento sequencia_delineamento[]
}

model foco {
  id         Int       @id @default(autoincrement())
  id_culture Int
  name       String
  status     Int?      @default(1)
  created_by Int
  created_at DateTime? @default(now())

  npe           npe[]
  foco_children foco_children[]
  culture       culture         @relation(fields: [id_culture], references: [id])
}

model foco_children {
  id       Int @id @default(autoincrement())
  id_safra Int
  id_foco  Int
  grupo    Int
  status     Int?      @default(1)
  created_by Int
  created_at DateTime? @default(now())


  safra safra @relation(fields: [id_safra], references: [id])
  foco  foco  @relation(fields: [id_foco], references: [id])
}

model type_assay {
  id         Int       @id @default(autoincrement())
  id_culture Int
  id_safra   Int      
  name       String
  status     Int       @default(1)
  created_by Int
  created_at DateTime? @default(now())

  npe     npe[]
  culture culture @relation(fields: [id_culture], references: [id])
  safra safra   @relation(fields: [id_safra], references: [id])
}

model tecnologia {
  id         Int       @id @default(autoincrement())
  cod_tec    String    @default("")
  id_culture Int
  name       String
  desc       String?
  status     Int       @default(1)
  created_by Int
  created_at DateTime? @default(now())

  npe      npe[]
  genotipo genotipo[]
  culture  culture    @relation(fields: [id_culture], references: [id])
}

model lote {
  id          Int      @id @default(autoincrement())
  id_genotipo Int
  name        String
  volume      Int
  status      Int      @default(1)
  created_by  Int
  created_at  DateTime @default(now())
  genotipo    genotipo @relation(fields: [id_genotipo], references: [id])
}

model epoca {
  id         Int      @id @default(autoincrement())
  id_culture Int
  name       String
  status     Int      @default(1)
  created_by Int
  created_at DateTime @default(now())

  culture culture @relation(fields: [id_culture], references: [id])
}

model import_spreadsheet {
  id       Int  @id @default(autoincrement())
  moduleId Int  @unique
  fields   Json
}

model npe {
  id            Int       @id @default(autoincrement())
  id_local      Int
  id_safra      Int
  id_foco       Int
  id_type_assay Int
  id_ogm        Int
  epoca         String?
  npei          Int
  npef          Int?
  prox_npe      Int?
  group         Int       @default(0)
  status        Int       @default(1)
  created_by    Int
  created_at    DateTime? @default(now())

  local      local      @relation(fields: [id_local], references: [id])
  safra      safra      @relation(fields: [id_safra], references: [id])
  foco       foco       @relation(fields: [id_foco], references: [id])
  type_assay type_assay @relation(fields: [id_type_assay], references: [id])
  tecnologia tecnologia @relation(fields: [id_ogm], references: [id])
}

model sequencia_delineamento {
  id              Int      @id @default(autoincrement())
  id_delineamento Int
  repeticao       Int
  sorteio         Int
  nt              Int
  bloco           Int
  status          Int      @default(1)
  created_by      Int
  created_at      DateTime @default(now())

  delineamento delineamento @relation(fields: [id_delineamento], references: [id])
}
