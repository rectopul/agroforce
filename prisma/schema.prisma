generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model config_gerais {
  id             Int      @id @default(autoincrement())
  itens_per_page Int?
  updated_at     DateTime @default(now())
  updated_by     Int
}

model culture {
  id                Int                 @id @default(autoincrement())
  name              String?             @unique(map: "Culture_name_key")
  created_at        DateTime            @default(now())
  created_by        Int
  status            Int                 @default(1)
  desc              String?
  delineamento      delineamento[]
  epoca             epoca[]
  foco              foco[]
  genotipo          genotipo[]
  layout_quadra     layout_quadra[]
  quadra            quadra[]
  safra             safra[]
  tecnologia        tecnologia[]
  type_assay        type_assay[]
  users_cultures    users_cultures[]
  users_permissions users_permissions[]
}

model department {
  id         Int      @id @default(autoincrement())
  name       String   @unique(map: "Department_name_key")
  status     Int      @default(1)
  created_at DateTime @default(now())
  created_by Int
  user       user[]
}

model modules {
  id                Int                 @id @default(autoincrement())
  module            String              @unique(map: "Modules_module_key")
  users_preferences users_preferences[]
}

model profile {
  id                Int                 @id @default(autoincrement())
  name              String
  acess_permission  String
  created_at        DateTime            @default(now())
  created_by        Int
  status            Int?
  users_permissions users_permissions[]
}

model safra {
  id                  Int                   @id @default(autoincrement())
  id_culture          Int
  year                Int
  plantingStartTime   String?
  plantingEndTime     String?
  main_safra          Int?                  @default(0)
  status              Int?                  @default(1)
  created_by          Int
  created_at          DateTime?             @default(now())
  safraName           String?
  culture             culture               @relation(fields: [id_culture], references: [id])
  assay_list          assay_list[]
  envelope            envelope[]
  experiment          experiment[]
  genotipo            genotipo[]
  genotype_treatment  genotype_treatment[]
  group               group[]
  lote                lote[]
  npe                 npe[]
  quadra              quadra[]
  cultureUnity        cultureUnity[]
  experiment_genotipe experiment_genotipe[]
  ExperimentGroup     ExperimentGroup[]
}

model uf {
  id    Int     @id
  nome  String? @db.Char(255)
  sigla String? @db.Char(2)
}

model user {
  id                Int                 @id @default(autoincrement())
  name              String?
  email             String?
  cpf               String              @unique(map: "User_cpf_key")
  tel               String?
  password          String
  avatar            String?             @db.Text
  registration      Int?
  departmentId      Int
  status            Int                 @default(1)
  created_at        DateTime            @default(now())
  created_by        Int
  login             String?             @unique(map: "User_email_key")
  department        department          @relation(fields: [departmentId], references: [id], map: "User_departmentId_fkey")
  log_import        log_import[]
  users_cultures    users_cultures[]
  users_permissions users_permissions[]
  users_preferences users_preferences[]
}

model users_cultures {
  id         Int      @id @default(autoincrement())
  userId     Int
  cultureId  Int
  created_at DateTime @default(now())
  created_by Int
  status     Int      @default(0)
  culture    culture  @relation(fields: [cultureId], references: [id], map: "Users_Cultures_cultureId_fkey")
  user       user     @relation(fields: [userId], references: [id], map: "Users_Cultures_userId_fkey")
}

model users_permissions {
  id         Int      @id @default(autoincrement())
  userId     Int
  profileId  Int
  cultureId  Int
  created_at DateTime @default(now())
  created_by Int
  status     Int
  culture    culture  @relation(fields: [cultureId], references: [id])
  profile    profile  @relation(fields: [profileId], references: [id], map: "Users_Permissions_profileId_fkey")
  user       user     @relation(fields: [userId], references: [id], map: "Users_Permissions_userId_fkey")
}

model users_preferences {
  id                Int      @id @default(autoincrement())
  userId            Int
  module_id         Int
  table_preferences String?
  updated_at        DateTime @default(now())
  modules           modules  @relation(fields: [module_id], references: [id], map: "Users_Preferences_module_id_fkey")
  user              user     @relation(fields: [userId], references: [id], map: "Users_Preferences_userId_fkey")
}

model local {
  id                 Int            @id @default(autoincrement())
  latitude           String?
  longitude          String?
  altitude           String?
  created_at         DateTime       @default(now())
  created_by         Int
  status             Int            @default(1)
  adress             String
  id_country         Int
  id_local_culture   Int            @unique
  id_locality        Int
  id_region          Int
  label              String
  label_country      String
  label_region       String
  mloc               String
  name_country       String
  name_local_culture String
  name_locality      String
  name_region        String
  dt_import          DateTime       @default(now())
  cultureUnity       cultureUnity[]
  experiment         experiment[]
  npe                npe[]
  quadra             quadra[]
}

model cultureUnity {
  id                 Int       @id @default(autoincrement())
  id_safra           Int
  id_local           Int
  id_unity_culture   Int
  year               Int
  name_unity_culture String
  created_by         Int
  created_at         DateTime? @default(now())
  local              local     @relation(fields: [id_local], references: [id])
  safra              safra     @relation(fields: [id_safra], references: [id])
}

model layout_quadra {
  id          Int               @id @default(autoincrement())
  esquema     String
  plantadeira String
  tiros       Int?
  disparos    Int?
  parcelas    Int?
  status      Int               @default(1)
  created_by  Int
  created_at  DateTime          @default(now())
  id_culture  Int
  culture     culture           @relation(fields: [id_culture], references: [id])
  children    layout_children[]
}

model layout_children {
  id           Int           @id @default(autoincrement())
  sl           Int
  sc           Int
  s_aloc       Int
  tiro         Int
  cj           String
  disparo      Int
  dist         Int
  st           String
  spc          String
  scolheita    Int
  tipo_parcela String
  created_by   Int
  created_at   DateTime      @default(now())
  id_layout    Int
  Layout       layout_quadra @relation(fields: [id_layout], references: [id])
}

model quadra {
  id            Int        @id @default(autoincrement())
  cod_quadra    String
  id_culture    Int
  local_plantio String?
  larg_q        Int
  comp_p        Int
  linha_p       Int
  comp_c        Decimal    @db.Decimal(2, 1)
  esquema       String?
  tiro_fixo     Int?
  disparo_fixo  Int?
  q             String?
  status        Int        @default(1)
  created_by    Int
  created_at    DateTime   @default(now())
  id_safra      Int
  id_local      Int
  culture       culture    @relation(fields: [id_culture], references: [id])
  local         local      @relation(fields: [id_local], references: [id])
  safra         safra      @relation(fields: [id_safra], references: [id])
  dividers      dividers[]
}

model dividers {
  id         Int      @id @default(autoincrement())
  id_quadra  Int
  t4_i       Int
  t4_f       Int
  di         Int
  divisor    Int
  df         Int
  sem_metros Int
  created_by Int
  created_at DateTime @default(now())
  quadra     quadra   @relation(fields: [id_quadra], references: [id])
}

model genotipo {
  id                  Int                   @id @default(autoincrement())
  id_culture          Int
  cruza               String?
  created_by          Int
  created_at          DateTime              @default(now())
  id_tecnologia       Int
  bgm                 Decimal?              @db.Decimal(12, 2)
  elit_name           String?
  gmr                 Decimal?              @db.Decimal(12, 2)
  numberLotes         Int?
  id_dados            String
  id_s1               Int
  name_alter          String?
  name_experiment     String?
  name_genotipo       String
  name_main           String?
  name_public         String?
  parentesco_completo String?               @db.MediumText
  progenitor_f_direto String?
  progenitor_f_origem String?
  progenitor_m_direto String?
  progenitor_m_origem String?
  progenitores_origem String?
  type                String?
  safraId             Int?
  dt_import           DateTime              @default(now())
  culture             culture               @relation(fields: [id_culture], references: [id])
  tecnologia          tecnologia            @relation(fields: [id_tecnologia], references: [id])
  safra               safra?                @relation(fields: [safraId], references: [id])
  genotype_treatment  genotype_treatment[]
  lote                lote[]
  experiment_genotipe experiment_genotipe[]
}

model delineamento {
  id                     Int                      @id @default(autoincrement())
  id_culture             Int
  name                   String
  repeticao              Int
  trat_repeticao         Int
  status                 Int                      @default(1)
  created_by             Int
  created_at             DateTime?                @default(now())
  culture                culture                  @relation(fields: [id_culture], references: [id])
  experiment             experiment[]
  sequencia_delineamento sequencia_delineamento[]
}

model foco {
  id                  Int                   @id @default(autoincrement())
  id_culture          Int
  name                String
  status              Int?                  @default(1)
  created_by          Int
  created_at          DateTime?             @default(now())
  culture             culture               @relation(fields: [id_culture], references: [id])
  assay_list          assay_list[]
  group               group[]
  npe                 npe[]
  experiment_genotipe experiment_genotipe[]
}

model group {
  id         Int       @id @default(autoincrement())
  id_safra   Int
  id_foco    Int
  created_by Int
  created_at DateTime? @default(now())
  group      Int
  foco       foco      @relation(fields: [id_foco], references: [id])
  safra      safra     @relation(fields: [id_safra], references: [id])
  npe        npe[]
}

model type_assay {
  id                  Int                   @id @default(autoincrement())
  id_culture          Int
  name                String
  status              Int                   @default(1)
  created_by          Int
  created_at          DateTime?             @default(now())
  protocol_name       String
  culture             culture               @relation(fields: [id_culture], references: [id])
  assay_list          assay_list[]
  envelope            envelope[]
  npe                 npe[]
  experiment_genotipe experiment_genotipe[]
}

model envelope {
  id            Int        @id @default(autoincrement())
  id_safra      Int
  id_type_assay Int
  seeds         Int
  created_by    Int
  created_at    DateTime?  @default(now())
  safra         safra      @relation(fields: [id_safra], references: [id])
  type_assay    type_assay @relation(fields: [id_type_assay], references: [id])
}

model tecnologia {
  id                  Int                   @id @default(autoincrement())
  id_culture          Int
  name                String
  created_by          Int
  created_at          DateTime?             @default(now())
  desc                String?
  cod_tec             String                @default("")
  dt_import           DateTime              @default(now())
  culture             culture               @relation(fields: [id_culture], references: [id])
  assay_list          assay_list[]
  genotipo            genotipo[]
  npe                 npe[]
  experiment_genotipe experiment_genotipe[]
}

model lote {
  id                 Int                  @id @default(autoincrement())
  created_by         Int
  created_at         DateTime             @default(now())
  id_genotipo        Int
  cod_lote           String
  fase               String?
  id_dados           Int                  @unique
  id_s2              Int
  id_safra           Int
  ncc                Decimal?             @db.Decimal(12, 0)
  peso               Decimal?             @db.Decimal(5, 0)
  quant_sementes     Int?
  year               Int?
  genotipo           genotipo             @relation(fields: [id_genotipo], references: [id])
  safra              safra                @relation(fields: [id_safra], references: [id])
  genotype_treatment genotype_treatment[]
}

model epoca {
  id         Int      @id @default(autoincrement())
  id_culture Int
  name       String
  status     Int      @default(1)
  created_by Int
  created_at DateTime @default(now())
  culture    culture  @relation(fields: [id_culture], references: [id])
}

model import_spreadsheet {
  id       Int  @id @default(autoincrement())
  moduleId Int  @unique
  fields   Json
}

model npe {
  id           Int       @id @default(autoincrement())
  npei         Int
  npef         Int?
  prox_npe     Int?
  npeQT        Int?
  created_by   Int
  epoca        String?
  focoId       Int?
  localId      Int?
  safraId      Int?
  groupId      Int?
  typeAssayId  Int?
  tecnologiaId Int?
  status       Int       @default(1)
  edited       Int       @default(0)
  created_at   DateTime? @default(now())

  foco       foco?       @relation(fields: [focoId], references: [id])
  local      local?      @relation(fields: [localId], references: [id])
  safra      safra?      @relation(fields: [safraId], references: [id])
  group      group?      @relation(fields: [groupId], references: [id])
  type_assay type_assay? @relation(fields: [typeAssayId], references: [id])
  tecnologia tecnologia? @relation(fields: [tecnologiaId], references: [id])
}

model sequencia_delineamento {
  id              Int          @id @default(autoincrement())
  id_delineamento Int
  repeticao       Int
  sorteio         Int
  nt              Int
  bloco           Int
  status          Int          @default(1)
  created_by      Int
  created_at      DateTime     @default(now())
  delineamento    delineamento @relation(fields: [id_delineamento], references: [id])
}

model experiment {
  id                Int       @id @default(autoincrement())
  status            String    @default("IMPORTADO")
  created_by        Int
  created_at        DateTime? @default(now())
  clp               Decimal   @db.Decimal(5, 2)
  comments          String    @db.LongText
  density           Int
  eel               Decimal   @db.Decimal(5, 2)
  experimentName    String
  idAssayList       Int
  idDelineamento    Int
  experimentGroupId Int?
  idLocal           Int
  idSafra           Int
  nlp               Int
  orderDraw         Int
  period            Int
  repetitionsNumber Int

  assay_list          assay_list            @relation(fields: [idAssayList], references: [id])
  delineamento        delineamento          @relation(fields: [idDelineamento], references: [id])
  local               local                 @relation(fields: [idLocal], references: [id])
  safra               safra                 @relation(fields: [idSafra], references: [id])
  ExperimentGroup     ExperimentGroup?      @relation(fields: [experimentGroupId], references: [id])
  experiment_genotipe experiment_genotipe[]
}

model log_import {
  id           Int       @id @default(autoincrement())
  user_id      Int
  table        String
  status       Int       @default(2)
  created_at   DateTime? @default(now())
  updated_at   DateTime? @default(now())
  state        String?
  executeTime  String?
  totalRecords Int?
  user         user      @relation(fields: [user_id], references: [id])
}

model assay_list {
  id                 Int                  @id @default(autoincrement())
  id_safra           Int
  id_foco            Int
  id_type_assay      Int
  id_tecnologia      Int
  gli                String
  period             Int
  protocol_name      String
  treatmentsNumber   Int?
  bgm                Int
  project            String
  status             String               @default("IMPORTADO")
  comments           String?
  created_by         Int
  created_at         DateTime?            @default(now())
  foco               foco                 @relation(fields: [id_foco], references: [id])
  safra              safra                @relation(fields: [id_safra], references: [id])
  tecnologia         tecnologia           @relation(fields: [id_tecnologia], references: [id])
  type_assay         type_assay           @relation(fields: [id_type_assay], references: [id])
  experiment         experiment[]
  genotype_treatment genotype_treatment[]
}

model genotype_treatment {
  id                Int        @id @default(autoincrement())
  id_safra          Int
  id_assay_list     Int
  id_genotipo       Int
  id_lote           Int?
  treatments_number Int
  comments          String?
  status            String
  created_by        Int
  assay_list        assay_list @relation(fields: [id_assay_list], references: [id])
  genotipo          genotipo   @relation(fields: [id_genotipo], references: [id])
  lote              lote?      @relation(fields: [id_lote], references: [id])
  safra             safra      @relation(fields: [id_safra], references: [id])
}

model history_genotype_treatment {
  id         Int      @id @default(autoincrement())
  safra      String
  foco       String
  ensaio     String
  tecnologia String
  gli        String
  bgm        Int
  nt         Int
  status     String
  genotipo   String
  nca        Decimal  @db.Decimal(12, 0)
  created_by Int
  createdAt  DateTime @default(now())
}

model experiment_genotipe {
  id           Int       @id @default(autoincrement())
  created_at   DateTime? @default(now())
  idSafra      Int
  idFoco       Int
  idTypeAssay  Int
  idTecnologia Int
  idExperiment Int
  idGenotipo   Int
  idLote       Int?
  gli          String
  rep          Int
  nt           Int
  npe          Int
  nca          String
  status       String    @default("SORTEADO")

  safra      safra      @relation(fields: [idSafra], references: [id])
  type_assay type_assay @relation(fields: [idTypeAssay], references: [id])
  tecnologia tecnologia @relation(fields: [idTecnologia], references: [id])
  foco       foco       @relation(fields: [idFoco], references: [id])
  experiment experiment @relation(fields: [idExperiment], references: [id])
  genotipo   genotipo   @relation(fields: [idGenotipo], references: [id])
}

model ExperimentGroup {
  id               Int      @id @default(autoincrement())
  safraId          Int
  name             String
  experimentAmount Int      @default(0)
  tagsToPrint      Int?
  tagsPrinted      Int?
  totalTags        Int?
  status           String?
  createdBy        Int
  createdAt        DateTime @default(now())

  safra      safra        @relation(fields: [safraId], references: [id])
  experiment experiment[]
}

model reportes {
  id         Int      @id @default(autoincrement())
  madeBy      Int?
  madeIn       String?
  module     String?
  operation     String?
  idOperation      Int?   
  name     String? 
  ip     String?     
}