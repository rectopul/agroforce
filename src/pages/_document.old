const newrelic = require('newrelic');

import Document, {
  DocumentContext,
  DocumentInitialProps,
  Html, Head, Main, NextScript,
} from 'next/document';

import Script from 'next/script';


type DocumentProps = {
  browserTimingHeader: string
}

export default class MyDocument extends Document<DocumentProps> {

  static async getInitialProps(
    ctx: DocumentContext
  ): Promise<DocumentInitialProps> {
    const initialProps = await Document.getInitialProps(ctx);

    let browserTimingHeader = newrelic.getBrowserTimingHeader({
      hasToRemoveScriptWrapper: true,
    });

    return { ...initialProps, browserTimingHeader };
  }
  
  render() {
    return (
      <Html lang="pt-BR">
        <Head>
          <link rel="stylesheet" href="https://rsms.me/inter/inter.css" />

          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/images/logo.png" />

          <link
            rel="stylesheet"
            href="https://fonts.googleapis.com/icon?family=Material+Icons"
          />

          <link rel="shortcut icon" href="/images/logo.png" type="image/png" />
        </Head>
        <body style={{maxWidth: "1366px", height: "100%"}}>
          <Main />
          <NextScript />
        </body>
      </Html>
    );
  }
}
